#!/usr/bin/env bash

BUILD_CONFIG = config.py
BUILD_PARAMS = build_params.txt

HERO_RAW_FILES := $(wildcard hero5/*.MP4)
HERO_JOIN_CONFIG = hero_join_config.txt
HERO_JOIN_FILE = hero.join.mp4
HERO_PRE_AUDIO_FILE = hero.pre.join.aac
HERO_AUDIO_FILE = hero.join.aac

HERO_WAVEFORM_PLOT = hero.wavform.plot.png
HERO_WAVEFORM_FILE = hero.wavform.avi
HERO_PLUS_WAVEFORM = hero_plus_waveform.mp4
HERO_RENDER = hero_render.mp4
HERO_OUTPUT_BITRATE = 30000k
HERO_SCALING_FACTOR = 1.0 #0.75
HERO_GENERATED_FILES = hero.join.wav

RECORDER_AUDIO_FILE = recorder.join.aac
# MAX_WAVEFORM_PLOT = max.wavform.plot.png
# MAX_WAVEFORM_FILE = max.wavform.avi
# MAX_PLUS_WAVEFORM = max_plus_waveform.mp4
# MAX_RENDER = _render.mp4
# MAX_OUTPUT_BITRATE = 30000k
# MAX_SCALING_FACTOR = 1.0
# MAX_GENERATED_FILES = max.join.wav

# MERGED_OUTPUT_BITRATE = 30000k
# MERGED_SBS = merge_sbs.mp4
# MERGED_AUDIO = merged_audio.aac
# MERGED_RENDER = merged_render.mp4

# HERO_RAW_FILES := hero5/*.MP4
# HERO_INTERMEDIATE_FILES = $(patsubst %.MP4, )
# MAX_RAW_FILES := max/*.LRV
# TIME_OPTIONS = -t 00:05:00.000
# If apad is enabled in the audio filter (different length video), you need to set a bounding time to complete:
# TIME_OPTIONS = -t 3433.592000
FFMEG_BIN = ~/bin/ffmpeg

READ_TIME_OPTIONS = python -c "import config; print(config.TIME_OPTIONS)"
READ_ADVANCE_RECORDER_SECONDS = python -c "import config; print(config.ADVANCE_RECORDER_SECONDS)"
READ_ADVANCE_HERO_SECONDS = python -c "import config; print(config.ADVANCE_HERO_SECONDS)"
# next two lines horrible hacks - will get rid of these soon
READ_ADVANCE_RECORDER = python -c "h, r =divmod($(shell $(READ_ADVANCE_RECORDER_SECONDS)), 3600); m, s = divmod(r, 60); print('{:0>2}:{:0>2}:{:05.3f}'.format(int(h), int(m), s))"
READ_ADVANCE_HERO = python -c "h, r =divmod($(shell $(READ_ADVANCE_HERO_SECONDS)), 3600); m, s = divmod(r, 60); print('{:0>2}:{:0>2}:{:05.3f}'.format(int(h), int(m), s))"
READ_VOLUME_HERO = python -c "import config; print(config.VOLUME_HERO)"
READ_VOLUME_RECORDER = python -c "import config; print(config.VOLUME_RECORDER)"
READ_HERO_AUDIO_OPTS = python -c "import config; print(config.HERO_AUDIO_OPTS)"

NONE=\033[00m
RED=\033[01;31m
GREEN=\033[01;32m
YELLOW=\033[01;33m
PURPLE=\033[01;35m
CYAN=\033[01;36m
WHITE=\033[01;37m
BOLD=\033[1m
UNDERLINE=\033[4m

# echo -e "This text is ${RED}red${NONE} and ${GREEN}green${NONE} and ${BOLD}bold${NONE} and ${UNDERLINE}underlined${NONE}."


all: $(BUILD_PARAMS) $(HERO_RENDER) # merged_full.mp4

.PHONY: build_params all clean clobber distclean

$(BUILD_PARAMS): $(BUILD_CONFIG) Makefile.single
	@echo "${BOLD}recording build parameters${NONE}"
	build_params.py Makefile.single > $@
	cp Makefile.single Makefile.build

clean:
	@echo "${BOLD}clean derivative files - leave join files${NONE}"
	rm -f $(HERO_AUDIO_FILE) $(HERO_WAVEFORM_PLOT) $(HERO_WAVEFORM_FILE) $(HERO_PLUS_WAVEFORM) $(HERO_GENERATED_FILES)  $(HERO_RENDER)
	rm -f $(MAX_AUDIO_FILE) $(MAX_WAVEFORM_PLOT) $(MAX_WAVEFORM_FILE) $(MAX_PLUS_WAVEFORM) $(MAX_RENDER) $(MAX_GENERATED_FILES)
	rm -f audio_test

clobber: clean
	@echo "${BOLD}clobber - kill them all${NONE}"
	rm -f $(HERO_JOIN_CONFIG) $(HERO_JOIN_FILE)
	rm -f $(MAX_JOIN_CONFIG) $(MAX_JOIN_FILE) $(MAX_JOIN_FISHEYE_FILE)
	rm -f $(MERGED_SBS) $(MERGED_AUDIO) $(MERGED_RENDER)
	rm -f $(BUILD_CONFIG) $(BUILD_PARAMS) Makefile.build
	rm -rf __pycache__

distclean:
	@echo "${BOLD}distclean - leave final file and config${NONE}"
	rm -f $(HERO_AUDIO_FILE) $(HERO_WAVEFORM_PLOT) $(HERO_WAVEFORM_FILE) $(HERO_PLUS_WAVEFORM) $(HERO_GENERATED_FILES)
	rm -f $(HERO_JOIN_CONFIG) $(HERO_JOIN_FILE)
	rm -f $(MAX_AUDIO_FILE) $(MAX_WAVEFORM_PLOT) $(MAX_WAVEFORM_FILE) $(MAX_PLUS_WAVEFORM) $(MAX_GENERATED_FILES)
	rm -f $(MAX_JOIN_CONFIG) $(MAX_JOIN_FISHEYE_FILE) $(MAX_JOIN_FILE)
	rm -f $(MERGED_SBS) $(MERGED_AUDIO)
	rm -f audio_test
	rm -rf __pycache__


DEFAULT_CONFIG = "TIME_OPTIONS = '' \#-t 00:05:00.000'\nADVANCE_MAX_SECONDS = 0.000\nADVANCE_HERO_SECONDS = 0.000\nVOLUME_HERO = 1.0\nHERO_AUDIO_OPTS = '' \# ', compand=attacks=0:decays=0.4:points=-30/-900|-20/-20|0/0|20/20'"

$(BUILD_CONFIG):
	@echo "${BOLD}generate build config file${NONE}"
	@echo $(DEFAULT_CONFIG) > $@

#=======================================================================================================

# generate ffmpeg join config for hero files
$(HERO_JOIN_CONFIG): $(HERO_RAW_FILES)
	@echo "${BOLD}generate hero ffmpeg join config file${NONE}"
	FILE_LIST=`python -c "print('\n'.join(['file \'%s\'' % s for s in '$(HERO_RAW_FILES)'.split()]))"`; \
	echo "$$FILE_LIST" > $@

# join hero files
$(HERO_JOIN_FILE): $(HERO_JOIN_CONFIG)
	@echo "${BOLD}concat hero files${NONE}"
	$(FFMEG_BIN) -y -f concat -safe 0 -i $< -c copy $@

# mix audio tracks
$(HERO_AUDIO_FILE): $(HERO_JOIN_FILE) $(BUILD_CONFIG)
	@echo "${BOLD}extract time offset hero audio track${NONE}"
	$(FFMEG_BIN) \
		-y \
		-ss $(shell $(READ_ADVANCE_HERO)) \
		-i $(HERO_JOIN_FILE) \
		-filter_complex \
		"volume=$(shell $(READ_VOLUME_HERO))$(shell $(READ_HERO_AUDIO_OPTS))" \
		$@

# generate waveform plot
$(HERO_WAVEFORM_PLOT): $(HERO_JOIN_FILE) $(HERO_AUDIO_FILE)
	@echo "${BOLD}generate hero waveform plot${NONE}"
	HERO_JOIN_WIDTH=`video_geometry.py --width $(HERO_JOIN_FILE)`; \
	HERO_SCALED_WIDTH=`python -c "print(int($(HERO_SCALING_FACTOR) * $$HERO_JOIN_WIDTH))"` ; \
	gen_wave_plot.py --height=100 --channels=1 --width=$$HERO_SCALED_WIDTH $(HERO_AUDIO_FILE) --output=$@

# generate waveform file
$(HERO_WAVEFORM_FILE): $(HERO_JOIN_FILE) $(HERO_WAVEFORM_PLOT)
	@echo "${BOLD}generate waveform progress video${NONE}"
	DURATION_SECONDS=`ffprobe -v error -show_entries format=duration -of default=noprint_wrappers=1:nokey=1 $(HERO_JOIN_FILE)`; \
	DURATION_TRIMMED=`python -c "print($$DURATION_SECONDS - $(shell $(READ_ADVANCE_HERO_SECONDS)))"`; \
	gen_waveform_slider.py $(HERO_WAVEFORM_PLOT) $$DURATION_SECONDS --output=$(HERO_WAVEFORM_FILE)

# combine video with waveform video
$(HERO_PLUS_WAVEFORM): $(HERO_JOIN_FILE) $(HERO_WAVEFORM_FILE) $(BUILD_CONFIG)
	@echo "${BOLD}combine hero and waveform video vertically${NONE}"

	TOP_HEIGHT=`video_geometry.py --height $(HERO_JOIN_FILE)`; \
	TOP_HEIGHT_SCALED=`python -c "print(int($(HERO_SCALING_FACTOR) * $$TOP_HEIGHT))"` ; \
	TOP_WIDTH=`video_geometry.py --width $(HERO_JOIN_FILE)`; \
	TOP_WIDTH_SCALED=`python -c "print(int($(HERO_SCALING_FACTOR) * $$TOP_WIDTH))"` ; \
	echo TWS: $$TOP_WIDTH_SCALED; \
	echo THS: $$TOP_HEIGHT_SCALED; \
	BOTTOM_HEIGHT=`video_geometry.py --height $(HERO_WAVEFORM_FILE)`; \
	OUTPUT_WIDTH=$$TOP_WIDTH_SCALED; \
	OUTPUT_HEIGHT=`python -c "print($$TOP_HEIGHT_SCALED + $$BOTTOM_HEIGHT)"`; \
	TOP_GEOMETRY="$$TOP_WIDTH_SCALED"x"$$TOP_HEIGHT_SCALED"; \
	GEOMETRY="$$OUTPUT_WIDTH"x"$$OUTPUT_HEIGHT"; \
	echo G: $$GEOMETRY; \
	$(FFMEG_BIN) \
		-y \
		-ss $(shell $(READ_ADVANCE_HERO)) \
		-i $(HERO_JOIN_FILE) \
		-i $(HERO_WAVEFORM_FILE) \
		-filter_complex " \
			nullsrc=size=$$GEOMETRY [base]; \
			[0:v] setpts=PTS-STARTPTS,scale=$$TOP_GEOMETRY [top]; \
			[1:v] setpts=PTS-STARTPTS [bottom]; \
			[base][top] overlay=shortest=1 [tmp1]; \
			[tmp1][bottom] overlay=shortest=1:y=$$TOP_HEIGHT_SCALED [out] \
			" \
		-map "[out]" \
		-b:v $(HERO_OUTPUT_BITRATE) \
		$(shell $(READ_TIME_OPTIONS)) \
		$@

# mix hereo audio and video
$(HERO_RENDER): $(HERO_PLUS_WAVEFORM) $(HERO_AUDIO_FILE) $(BUILD_CONFIG)
	@echo "${BOLD}mix hero render audio and video${NONE}"
	$(FFMEG_BIN) \
		-y \
		-i $(HERO_PLUS_WAVEFORM) \
		-i $(HERO_AUDIO_FILE) \
		-c copy \
		-acodec copy \
		-b:v $(HERO_OUTPUT_BITRATE) \
		$(shell $(READ_TIME_OPTIONS)) \
		$(HERO_RENDER)


